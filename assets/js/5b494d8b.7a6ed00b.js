"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[269],{1887:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>d,toc:()=>t});const d=JSON.parse('{"id":"python/UT2 - estructuras basicas/2.3_operadores","title":"2.3 Operadores","description":"Los operadores permiten realizar c\xe1lculos y comparaciones entre variables o valores. En Python existen distintos tipos:","source":"@site/docs/python/UT2 - estructuras basicas/2.3_operadores.md","sourceDirName":"python/UT2 - estructuras basicas","slug":"/python/UT2 - estructuras basicas/2.3_operadores","permalink":"/docs/python/UT2 - estructuras basicas/2.3_operadores","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"pythonSidebar","previous":{"title":"2.2 Tipos b\xe1sicos y Conversi\xf3n","permalink":"/docs/python/UT2 - estructuras basicas/2.2_tipos_conversion"},"next":{"title":"2.4 Funciones integradas","permalink":"/docs/python/UT2 - estructuras basicas/2.4_funciones integradas"}}');var r=s(4848),i=s(8453);const c={sidebar_position:3},l="2.3 Operadores",o={},t=[{value:"1\ufe0f\u20e3 <strong>Operadores aritm\xe9ticos</strong>",id:"1\ufe0f\u20e3-operadores-aritm\xe9ticos",level:2},{value:"2\ufe0f\u20e3 <strong>Operadores relacionales</strong>",id:"2\ufe0f\u20e3-operadores-relacionales",level:2},{value:"3\ufe0f\u20e3 <strong>Operadores l\xf3gicos</strong>",id:"3\ufe0f\u20e3-operadores-l\xf3gicos",level:2},{value:"4\ufe0f\u20e3 <strong>Otros operadores: identidad y pertenencia</strong>",id:"4\ufe0f\u20e3-otros-operadores-identidad-y-pertenencia",level:2},{value:"\ud83d\udfe9 Operadores de identidad",id:"-operadores-de-identidad",level:3},{value:"\ud83d\udfe6 Operadores de pertenencia",id:"-operadores-de-pertenencia",level:3},{value:"5\ufe0f\u20e3 <strong>Operadores de asignaci\xf3n abreviada</strong>",id:"5\ufe0f\u20e3-operadores-de-asignaci\xf3n-abreviada",level:2},{value:"6\ufe0f\u20e3 <strong>Operadores bit a bit</strong>",id:"6\ufe0f\u20e3-operadores-bit-a-bit",level:2},{value:"7\ufe0f\u20e3 <strong>Precedencia de operadores</strong>",id:"7\ufe0f\u20e3-precedencia-de-operadores",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"23-operadores",children:"2.3 Operadores"})}),"\n",(0,r.jsx)(n.p,{children:"Los operadores permiten realizar c\xe1lculos y comparaciones entre variables o valores. En Python existen distintos tipos:"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"1\ufe0f\u20e3-operadores-aritm\xe9ticos",children:["1\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Operadores aritm\xe9ticos"})]}),"\n",(0,r.jsx)(n.p,{children:"Se usan para operaciones matem\xe1ticas b\xe1sicas."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsxs)(n.th,{children:["Ejemplo (",(0,r.jsx)(n.code,{children:"a=7"}),", ",(0,r.jsx)(n.code,{children:"b=2"}),")"]}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"+"})}),(0,r.jsx)(n.td,{children:"Suma"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a + b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"9"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-"})}),(0,r.jsx)(n.td,{children:"Resta"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a - b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"5"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"*"})}),(0,r.jsx)(n.td,{children:"Multiplicaci\xf3n"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a * b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"14"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/"})}),(0,r.jsx)(n.td,{children:"Divisi\xf3n real"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a / b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3.5"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"//"})}),(0,r.jsx)(n.td,{children:"Divisi\xf3n entera"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a // b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"%"})}),(0,r.jsx)(n.td,{children:"Resto"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a % b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"1"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"**"})}),(0,r.jsx)(n.td,{children:"Potencia"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a ** b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"49"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"2\ufe0f\u20e3-operadores-relacionales",children:["2\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Operadores relacionales"})]}),"\n",(0,r.jsxs)(n.p,{children:["Comparan dos valores y devuelven un resultado booleano (",(0,r.jsx)(n.code,{children:"True"})," o ",(0,r.jsx)(n.code,{children:"False"}),")."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsxs)(n.th,{children:["Ejemplo (",(0,r.jsx)(n.code,{children:"a=5"}),", ",(0,r.jsx)(n.code,{children:"b=3"}),")"]}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"=="})}),(0,r.jsx)(n.td,{children:"Igual a"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a == b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"False"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"!="})}),(0,r.jsx)(n.td,{children:"Distinto de"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a != b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:">"})}),(0,r.jsx)(n.td,{children:"Mayor que"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a > b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<"})}),(0,r.jsx)(n.td,{children:"Menor que"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a < b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"False"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:">="})}),(0,r.jsx)(n.td,{children:"Mayor o igual"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a >= b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<="})}),(0,r.jsx)(n.td,{children:"Menor o igual"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a <= b"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"False"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"3\ufe0f\u20e3-operadores-l\xf3gicos",children:["3\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Operadores l\xf3gicos"})]}),"\n",(0,r.jsx)(n.p,{children:"Se aplican sobre valores booleanos."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Ejemplo"}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"and"})}),(0,r.jsx)(n.td,{children:"Conjunci\xf3n (y)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True and False"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"False"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"or"})}),(0,r.jsx)(n.td,{children:"Disyunci\xf3n (o)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True or False"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"not"})}),(0,r.jsx)(n.td,{children:"Negaci\xf3n"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"not True"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"False"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"4\ufe0f\u20e3-otros-operadores-identidad-y-pertenencia",children:["4\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Otros operadores: identidad y pertenencia"})]}),"\n",(0,r.jsxs)(n.p,{children:["Adem\xe1s de los operadores aritm\xe9ticos, relacionales y l\xf3gicos, Python incorpora ",(0,r.jsx)(n.strong,{children:"operadores especiales"})," que permiten comprobar la ",(0,r.jsx)(n.strong,{children:"identidad"})," de los objetos y la ",(0,r.jsx)(n.strong,{children:"pertenencia"})," de elementos dentro de colecciones."]}),"\n",(0,r.jsx)(n.h3,{id:"-operadores-de-identidad",children:"\ud83d\udfe9 Operadores de identidad"}),"\n",(0,r.jsxs)(n.p,{children:["Los operadores de identidad no comparan valores, sino si ",(0,r.jsx)(n.strong,{children:"dos variables hacen referencia al mismo objeto en memoria"}),"."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Ejemplo"}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"is"})}),(0,r.jsxs)(n.td,{children:["Devuelve ",(0,r.jsx)(n.code,{children:"True"})," si dos variables apuntan al ",(0,r.jsx)(n.strong,{children:"mismo objeto"}),"."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a is b"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"True"})," o ",(0,r.jsx)(n.code,{children:"False"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"is not"})}),(0,r.jsxs)(n.td,{children:["Devuelve ",(0,r.jsx)(n.code,{children:"True"})," si dos variables apuntan a ",(0,r.jsx)(n.strong,{children:"objetos distintos"}),"."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"a is not b"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"True"})," o ",(0,r.jsx)(n.code,{children:"False"})]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo pr\xe1ctico:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"x = [1, 2, 3]\r\ny = x          # y referencia al mismo objeto que x\r\nz = [1, 2, 3]  # z tiene el mismo contenido pero es otro objeto\r\n\r\nprint(x is y)      # True  (misma referencia)\r\nprint(x is z)      # False (contenido igual, objetos distintos)\r\nprint(x == z)      # True  (los valores son iguales)\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["\ud83d\udc49 ",(0,r.jsx)(n.strong,{children:"Diferencia importante"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is"})," \u2192 comprueba ",(0,r.jsx)(n.strong,{children:"identidad de objeto"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"=="})," \u2192 comprueba ",(0,r.jsx)(n.strong,{children:"igualdad de valores"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"-operadores-de-pertenencia",children:"\ud83d\udfe6 Operadores de pertenencia"}),"\n",(0,r.jsxs)(n.p,{children:["Estos operadores verifican si un valor se encuentra o no dentro de una ",(0,r.jsx)(n.strong,{children:"colecci\xf3n"})," (lista, tupla, cadena, diccionario, conjunto, etc.)."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Ejemplo"}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"in"})}),(0,r.jsxs)(n.td,{children:["Devuelve ",(0,r.jsx)(n.code,{children:"True"})," si el elemento est\xe1 dentro de la colecci\xf3n."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3 in [1,2,3]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"not in"})}),(0,r.jsxs)(n.td,{children:["Devuelve ",(0,r.jsx)(n.code,{children:"True"})," si el elemento ",(0,r.jsx)(n.strong,{children:"no"})," est\xe1 dentro de la colecci\xf3n."]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"a" not in "python"'})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"True"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo pr\xe1ctico:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'frutas = ["manzana", "pera", "uva"]\r\n\r\nprint("pera" in frutas)      # True\r\nprint("melon" not in frutas) # True\r\n\r\ntexto = "Python"\r\nprint("P" in texto)          # True\r\nprint("p" in texto)          # False (sensible a may\xfasculas)\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["\ud83d\udccc ",(0,r.jsx)(n.strong,{children:"Nota pr\xe1ctica:"})]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Se recomienda usar ",(0,r.jsx)(n.code,{children:"is"})," \xfanicamente para comprobar ",(0,r.jsxs)(n.strong,{children:["identidad con ",(0,r.jsx)(n.code,{children:"None"})]}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if valor is None:\r\n    print("No tiene valor")\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Para comparar valores (listas, cadenas, n\xfameros, etc.) siempre se debe usar ",(0,r.jsx)(n.code,{children:"=="})," o ",(0,r.jsx)(n.code,{children:"!="}),"."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"5\ufe0f\u20e3-operadores-de-asignaci\xf3n-abreviada",children:["5\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Operadores de asignaci\xf3n abreviada"})]}),"\n",(0,r.jsx)(n.p,{children:"Permiten actualizar el valor de una variable de forma compacta."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"x = 10\r\nx += 5   # equivale a x = x + 5\r\nx *= 2   # equivale a x = x * 2\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"6\ufe0f\u20e3-operadores-bit-a-bit",children:["6\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Operadores bit a bit"})]}),"\n",(0,r.jsxs)(n.p,{children:["Los ",(0,r.jsx)(n.strong,{children:"operadores bit a bit"})," (bitwise operators) son aquellos que trabajan directamente sobre la ",(0,r.jsx)(n.strong,{children:"representaci\xf3n binaria"})," de los n\xfameros enteros.\r\nEn lugar de operar con los n\xfameros en su valor decimal, ",(0,r.jsx)(n.strong,{children:"comparan y manipulan los bits individuales (0 y 1)"})," que los forman."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operador"}),(0,r.jsx)(n.th,{children:"Nombre"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Ejemplo (binario)"}),(0,r.jsx)(n.th,{children:"Resultado"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"&"})}),(0,r.jsx)(n.td,{children:"AND"}),(0,r.jsx)(n.td,{children:"Devuelve 1 si ambos bits son 1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"6 & 3 \u2192 110 & 011"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"010 = 2"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"|"})}),(0,r.jsx)(n.td,{children:"OR"}),(0,r.jsx)(n.td,{children:"Devuelve 1 si al menos un bit es 1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"6 | 3 \u2192 110 | 011"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"111 = 7"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"^"})}),(0,r.jsx)(n.td,{children:"XOR (OR exclusivo)"}),(0,r.jsx)(n.td,{children:"Devuelve 1 si los bits son diferentes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"6 ^ 3 \u2192 110 ^ 011"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"101 = 5"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"~"})}),(0,r.jsx)(n.td,{children:"NOT (complemento)"}),(0,r.jsx)(n.td,{children:"Invierte todos los bits (cambia 1 \u2194 0)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"~6 \u2192 ~(110)"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"-7"})," (complemento a dos)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<<"})}),(0,r.jsx)(n.td,{children:"Desplazamiento izq"}),(0,r.jsx)(n.td,{children:"Desplaza bits a la izquierda, rellena con 0"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"6 << 1 \u2192 110 << 1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"1100 = 12"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:">>"})}),(0,r.jsx)(n.td,{children:"Desplazamiento der"}),(0,r.jsx)(n.td,{children:"Desplaza bits a la derecha, descarta el \xfaltimo bit"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"6 >> 1 \u2192 110 >> 1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"11 = 3"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["El n\xfamero ",(0,r.jsx)(n.code,{children:"6"})," en binario es ",(0,r.jsx)(n.code,{children:"110"})]}),"\n",(0,r.jsxs)(n.li,{children:["El n\xfamero ",(0,r.jsx)(n.code,{children:"3"})," en binario es ",(0,r.jsx)(n.code,{children:"011"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando aplicamos ",(0,r.jsx)(n.code,{children:"6 & 3"}),", Python compara bit a bit ambas representaciones:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"  110   (6)\r\n& 011   (3)\r\n-----\r\n  010   (2)\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"7\ufe0f\u20e3-precedencia-de-operadores",children:["7\ufe0f\u20e3 ",(0,r.jsx)(n.strong,{children:"Precedencia de operadores"})]}),"\n",(0,r.jsx)(n.p,{children:"El orden de precedencia de los operadores en Python determina qu\xe9 operaciones se ejecutan primero cuando en una expresi\xf3n aparecen varios operadores. Si dos operadores tienen la misma precedencia, se eval\xfaan seg\xfan su asociatividad (normalmente de izquierda a derecha)."}),"\n",(0,r.jsx)(n.p,{children:"De mayor a menor precedencia:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Par\xe9ntesis"})," ",(0,r.jsx)(n.code,{children:"()"})," \u2192 alteran el orden natural."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exponentes"})," ",(0,r.jsx)(n.code,{children:"**"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Signos unarios"})," ",(0,r.jsx)(n.code,{children:"+x"}),", ",(0,r.jsx)(n.code,{children:"-x"}),", ",(0,r.jsx)(n.code,{children:"~x"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Multiplicaci\xf3n y divisi\xf3n"})," ",(0,r.jsx)(n.code,{children:"*"}),", ",(0,r.jsx)(n.code,{children:"/"}),", ",(0,r.jsx)(n.code,{children:"//"}),", ",(0,r.jsx)(n.code,{children:"%"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Suma y resta"})," ",(0,r.jsx)(n.code,{children:"+"}),", ",(0,r.jsx)(n.code,{children:"-"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Desplazamientos de bits"})," ",(0,r.jsx)(n.code,{children:"<<"}),", ",(0,r.jsx)(n.code,{children:">>"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Operadores bit a bit"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["AND: ",(0,r.jsx)(n.code,{children:"&"})]}),"\n",(0,r.jsxs)(n.li,{children:["XOR: ",(0,r.jsx)(n.code,{children:"^"})]}),"\n",(0,r.jsxs)(n.li,{children:["OR: ",(0,r.jsx)(n.code,{children:"|"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Comparaciones"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Relacionales: ",(0,r.jsx)(n.code,{children:"<"}),", ",(0,r.jsx)(n.code,{children:"<="}),", ",(0,r.jsx)(n.code,{children:">"}),", ",(0,r.jsx)(n.code,{children:">="})]}),"\n",(0,r.jsxs)(n.li,{children:["Igualdad: ",(0,r.jsx)(n.code,{children:"=="}),", ",(0,r.jsx)(n.code,{children:"!="})]}),"\n",(0,r.jsxs)(n.li,{children:["Identidad: ",(0,r.jsx)(n.code,{children:"is"}),", ",(0,r.jsx)(n.code,{children:"is not"})]}),"\n",(0,r.jsxs)(n.li,{children:["Pertenencia: ",(0,r.jsx)(n.code,{children:"in"}),", ",(0,r.jsx)(n.code,{children:"not in"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Operadores l\xf3gicos"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["NOT: ",(0,r.jsx)(n.code,{children:"not"})]}),"\n",(0,r.jsxs)(n.li,{children:["AND: ",(0,r.jsx)(n.code,{children:"and"})]}),"\n",(0,r.jsxs)(n.li,{children:["OR: ",(0,r.jsx)(n.code,{children:"or"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Asignaci\xf3n"})," ",(0,r.jsx)(n.code,{children:"="}),", ",(0,r.jsx)(n.code,{children:"+="}),", ",(0,r.jsx)(n.code,{children:"-="}),", ",(0,r.jsx)(n.code,{children:"*="}),", ",(0,r.jsx)(n.code,{children:"/="}),", etc."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{title:"ejemplo",type:"note",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"resultado = 3 + 4 * 2 ** 2\r\nprint(resultado)  # 19\n"})}),(0,r.jsx)(n.p,{children:"\ud83d\udd0e \xbfPor qu\xe9 19 y no 28?"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Primero se calcula ",(0,r.jsx)(n.code,{children:"2 ** 2"})," \u2192 ",(0,r.jsx)(n.code,{children:"4"})]}),"\n",(0,r.jsxs)(n.li,{children:["Luego ",(0,r.jsx)(n.code,{children:"4 * 4"})," \u2192 ",(0,r.jsx)(n.code,{children:"16"})]}),"\n",(0,r.jsxs)(n.li,{children:["Finalmente ",(0,r.jsx)(n.code,{children:"3 + 16"})," \u2192 ",(0,r.jsx)(n.code,{children:"19"})]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var d=s(6540);const r={},i=d.createContext(r);function c(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);